cmake_minimum_required(VERSION 3.16)

add_library(logger SHARED Logger.cpp)
target_link_libraries(logger PUBLIC spdlog::spdlog)

set(LOG_LEVEL Default CACHE STRING "Sets the build type")
set_property(CACHE LOG_LEVEL PROPERTY STRINGS Default Trace Debug Info Warn Error Critical Off)

if(${LOG_LEVEL} STREQUAL Trace)
    set (LOG_LEVEL TRACE)
    message(STATUS "Using log level Trace")
elseif(${LOG_LEVEL} STREQUAL Debug)
    set (LOG_LEVEL DEBUG)
    message(STATUS "Using log level Debug")
elseif(${LOG_LEVEL} STREQUAL Info)
    set (LOG_LEVEL INFO)
    message(STATUS "Using log level Info")
elseif(${LOG_LEVEL} STREQUAL Warn)
    set (LOG_LEVEL WARN)
    message(STATUS "Using log level Warn")
elseif(${LOG_LEVEL} STREQUAL Error)
    set (LOG_LEVEL ERROR)
    message(STATUS "Using log level Error")
elseif(${LOG_LEVEL} STREQUAL Critical)
    set (LOG_LEVEL CRITICAL)
    message(STATUS "Using log level Critical")
elseif(${LOG_LEVEL} STREQUAL Off)
    set (LOG_LEVEL OFF)
    message(STATUS "Using log level Off")
else()
    if((NOT ${LOG_LEVEL} STREQUAL Default) AND (NOT LOG_LEVEL STREQUAL ""))
        message(WARNING "Log level unknown, use -DLOG_LEVEL=[Trace, Debug, Info, Warn, Error, Critical, Off]")
    endif()
    set (LOG_LEVEL $<IF:$<CONFIG:Debug>,DEBUG,INFO>)
    message(STATUS "Setting LOG_LEVEL to according to build type")
endif()

target_compile_definitions(logger INTERFACE SPDLOG_ACTIVE_LEVEL=SPDLOG_LEVEL_${LOG_LEVEL})
install(TARGETS logger)
